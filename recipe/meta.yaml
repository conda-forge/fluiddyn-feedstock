{% set name = "fluiddyn" %}
{% set version = "0.3.1" %}
{% set build = 1002 %}
# ensure mpi is defined (needed for conda-smithy recipe-lint)
{% set mpi = mpi or 'nompi' %}

{% if mpi == 'nompi' %}
# prioritize nompi variant via build number
{% set build = build + 100 %}
{% endif %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 488dcc8cd1660fd6eed939defeb21250114b5de9c94cc1d979136ea439789b33

build:
  number: {{ build }}
  # add build string so packages can depend on
  # mpi or nompi variants explicitly:
  # `pkg * mpi_mpich_*` for mpich
  # `pkg * mpi_*` for any mpi
  # `pkg * nompi_*` for no mpi

  {% if mpi != 'nompi' %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  string: "{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}"

  {% if mpi != 'nompi' %}
  run_exports:
    - {{ name }}*{{ mpi_prefix }}_*
  {% endif %}

  skip: true  # [win and (mpi != 'nompi')]
  skip: true  # [py<36]
  entry_points:
    - fluidinfo = fluiddyn.util.info:main
    - fluidnbstripout = fluiddoc.fluidnbstripout:main
    - fluiddocset = fluiddoc.fluiddocset:main
    - fluiddump = fluiddyn.io.dump:main
    - fluidmat2py = fluiddyn.util.matlab2py:main
    - fluidcluster-help = fluiddyn.clusters:print_help_scheduler
  script: "{{ PYTHON }} -m pip install .[full] --no-deps --ignore-installed -vv "

requirements:
  host:
    - pip
    - python
    - {{ mpi }}  # [mpi != 'nompi']
    - mpi4py  # [mpi != 'nompi']
  run:
    - python
    - numpy
    - psutil >=5.2.1
    - six
    - {{ mpi }}  # [mpi != 'nompi']
    - mpi4py  # [mpi != 'nompi']
    - h5py
    - h5netcdf
    - nbstripout
    - scipy
    - matplotlib-base
#    - opencv
    - imageio
    - sip
    - scikit-image

test:
  imports:
    - fluiddoc
    - fluiddyn
    - fluiddyn.calcul
    - fluiddyn.calcul.test
    - fluiddyn.clusters
    - fluiddyn.clusters.test
    - fluiddyn.io
    - fluiddyn.io.test
    - fluiddyn.output
    - fluiddyn.output.test
    - fluiddyn.util
    - fluiddyn.util.matlab2py
    - fluiddyn.util.matlab2py.test
    - fluiddyn.util.test
  commands:
    - fluidinfo --help
    - fluidnbstripout --help
    - fluiddocset --help
    - fluiddump --help
    - fluidmat2py --help
    - fluidcluster-help --help

about:
  home: https://bitbucket.org/fluiddyn/fluiddyn
  license: CeCILL-B
  license_file: LICENSE.txt 
  summary: Framework for studying fluid dynamics.
  description: |
    FluidDyn project is an ecosystem of packages for research and teaching in
    fluid dynamics. The Python package fluiddyn contains basic utilities to
    manage File I/O for some esoteric formats, publication quality figures, job
    submission on clusters, MPI powerful classes to handle parameters, arrays,
    series of files simplified interfaces to calculate FFT, spherical harmonics
    and much more.
  doc_url: https://fluiddyn.readthedocs.io  

extra:
  recipe-maintainers:
    - CyrilleBonamy
    - paugier
    - ashwinvis  
